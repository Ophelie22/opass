services:
  # Service pour PostgreSQL
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydatabase
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mydatabase"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Service pour l'API Node.js
  api:
    build:
      context: ./api
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/mydatabase
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      - ./api:/usr/src/app
      - /usr/src/app/node_modules
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://api:3000/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  frontend:
    build:
      context: ./frontend 
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/usr/src/app 
      - /usr/src/app/node_modules
    depends_on:
      - api
      
  # Service Adminer pour g√©rer PostgreSQL
  adminer:
    image: adminer
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"

# Service Frontend Backoffice
  backoffice:
    build:
      context: ./backoffice
    environment:
    - REACT_APP_API_URL=http://api:3000/api/authregion
    - PORT=3002
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "3002:3002"
    volumes:
      - ./backoffice:/usr/src/app
      - /usr/src/app/node_modules

volumes:
  postgres_data: